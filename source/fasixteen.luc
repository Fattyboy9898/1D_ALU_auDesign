module fasixteen (
    input a[16],      // 16-bit input A
    input b[16],      // 16-bit input B
    input alufn[4],   // last 3 bits of 6-bit input ALUFN
    output z,         // output z
    output v,         // output v
    output n,         // output n
    output s[16]      // 16-bit output SUM
  ) {
  
  sig out[16],mout[32];

  always {
    case(alufn[0]) {
      //choosing between MUL + ADD or SUB 
      b0: 
          z = b0;
          v = b0;
          n = b0; 
        
         if (alufn[1]) {                         //multiplication b000010 
          mout = $signed(a) * $signed(b);
          out = mout[15:0];                      //for multiplication of signed numbers 
          if(mout[31:16] ==16b0){
           v=0;                                            
          } 
          else {
           v=1;
          }
        }
        
         else if (alufn[2]){                     //division b000100
          out = $signed(a) / $signed(b);         //for division of signed numbers   
                                               
        }
          
          else if (alufn[3]){                     //negate b001000
          out = -$signed(a);                      //for negate of signed numbers 

        }

          
        else {                                    //addition 
          out = a + b;                                                         
          z = ~|out;                                                           
          v = (((a[15])&(b[15])&(~out[15])) | ((~a[15])&(~b[15])&(out[15])));  
          n = out[15];  
        }  
                                                        
      b1:                                          //subtraction 
        out = a - b;                                                        
        z = ~|out;                                                          
        v = (((a[15])&(~b[15])&(~out[15])) | ((~a[15])&(b[15])&(out[15])));  
        n = out[15];
          
            
      default:                                                               
        out = 16b0;
        z = b0;
        v = b0;
        n = b0;
    }

    s = out[15:0];  
  }
}